export { supportedFiletypes } from "./lib/supported-filetypes.js";
export { SimpleTimer } from "./lib/timer.js";
export class NeocitiesAPIClient {
    static getKey(params: {
        siteName: string;
        ownerPassword: string[];
    }): Promise<ApiKeyResponse>;
    constructor(apiKey: string);
    apiKey: string;
    upload(files: FileUpload[]): ReturnType<typeof Endpoints.uploadSiteFiles>;
    delete(fileNames: string[]): ReturnType<typeof Endpoints.deleteSiteFiles>;
    list(path?: string): ReturnType<typeof Endpoints.listFilesForSite>;
    info(siteName?: string): ReturnType<typeof Endpoints.getInfo>;
    deploy(options: {
        directory: string;
        cleanup?: boolean | undefined;
        includeUnsupportedFiles?: boolean | undefined;
        protectedFileFilter?: ((path: string) => boolean) | undefined;
        uploadSort?: Endpoints.Comparator<FileUpload> | undefined;
    }): ReturnType<typeof Endpoints.deployToNeocities>;
    previewDeploy(options: {
        directory: string;
        includeUnsupportedFiles?: boolean | undefined;
        protectedFileFilter?: ((path: string) => boolean) | undefined;
        uploadSort?: Endpoints.Comparator<FileUpload> | undefined;
    }): Promise<AsyncNeocitiesDiff>;
}
import type { FileUpload } from './lib/neocities.js';
import * as Endpoints from './lib/api-endpoints.js';
import type { AsyncNeocitiesDiff } from './lib/folder-diff.js';
import type { ApiKeyResponse } from './lib/neocities.js';
export { printDeployText, printPreviewText, printResultsErrorDump } from "./lib/output-strings.js";
//# sourceMappingURL=index.d.ts.map